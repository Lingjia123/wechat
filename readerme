   1. 验证服务器的有效性：
  /*
      1. 验证服务器的有效性：
        - url 开发者服务器地址
          通过ngrok工具将本地地址转化外网能访问的地址（内网穿透）
          指令： ngrok http 3000
        - token 尽量复杂一些就行

        微信要求验证开发者服务器的有效性，同样的开发者也得验证消息是否来自于微信服务器
        1）将token、timestamp、nonce三个参数进行字典序排序
        2）将三个参数字符串拼接成一个字符串进行sha1加密
        3）开发者获得加密后的字符串可与signature对比，标识该请求来源于微信
     */
    /*
    { signature: 'efd377ff6ad1a1d57accc6d1848f1c7b9b9077f2',   微信加密签名
    echostr: '4809389192886745081', 微信后台生成的随机字符串
    timestamp: '1552966105',  微信后台发送请求的时间戳
    nonce: '1780047115' }     微信后台生成的随机数字
   */
//处理用户信息
  /*
          <xml>
          <ToUserName><![CDATA[gh_4fe7faab4d6c]]></ToUserName> 开发者微信测试号id
          <FromUserName><![CDATA[oAsoR1iP-_D3LZIwNCnK8BFotmJc]]></FromUserName>  用户的openid
          <CreateTime>1552976640</CreateTime> 发送消息的时间戳
          <MsgType><![CDATA[text]]></MsgType> 发送消息的类型
          <Content><![CDATA[222]]></Content>  发送消息具体内容
          <MsgId>22233279597873298</MsgId>    发送消息的id （默认保留3天， 3天后会销毁）
          </xml>
           */

        /* { xml:
            { ToUserName: [ 'gh_4fe7faab4d6c' ],
             FromUserName: [ 'oAsoR1iP-_D3LZIwNCnK8BFotmJc' ],
             CreateTime: [ '1552977229' ],
             MsgType: [ 'text' ],
             Content: [ '444' ],
             MsgId: [ '22233288777418374' ] } }   */
